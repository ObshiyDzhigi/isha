{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Zhiger\\\\Desktop\\\\nudity-recognizer-main\\\\frontend\\\\src\\\\components\\\\Textarea.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Textarea = () => {\n  _s();\n  const [text, setText] = useState('');\n  const [result, setResult] = useState(null);\n  const [imageFile, setImageFile] = useState(null);\n  const [videoFile, setVideoFile] = useState(null);\n  const [canCreatePost, setCanCreatePost] = useState(false);\n  const recognition = useRef(null);\n  const handleSubmit = async () => {\n    try {\n      let imagePath = null;\n      let videoPath = null;\n      if (imageFile) {\n        const formData = new FormData();\n        formData.append('file', imageFile);\n        const fileResponse = await axios.post('http://localhost:5000/upload', formData, {\n          headers: {\n            'Content-Type': 'multipart/form-data'\n          }\n        });\n        imagePath = fileResponse.data.file_path;\n      }\n      if (videoFile) {\n        const formData = new FormData();\n        formData.append('file', videoFile);\n        const fileResponse = await axios.post('http://localhost:5000/upload', formData, {\n          headers: {\n            'Content-Type': 'multipart/form-data'\n          }\n        });\n        videoPath = fileResponse.data.file_path;\n      }\n      const response = await axios.post('http://localhost:5000/process_data', {\n        text: text || recognition.currentTranscript,\n        image_path: imagePath,\n        video_path: videoPath\n      });\n      setResult(response.data);\n      if (response.data.nudity_probability !== \"This content is forbidden\" && !response.data.censored_text.includes(\"***\")) {\n        setCanCreatePost(true);\n      } else {\n        setCanCreatePost(false);\n      }\n    } catch (error) {\n      console.error('Ошибка отправки данных:', error);\n    }\n  };\n  const handleFileChange = event => {\n    const file = event.target.files[0];\n    if (file.type.startsWith('image')) {\n      setImageFile(file);\n    } else if (file.type.startsWith('video')) {\n      setVideoFile(file);\n    }\n  };\n  const handleChange = event => {\n    setText(event.target.value);\n  };\n  const handleSpeechRecognition = () => {\n    if (!('webkitSpeechRecognition' in window)) {\n      alert(\"Распознавание речи не поддерживается в вашем браузере.\");\n      return;\n    }\n    if (recognition.current) {\n      recognition.current.abort();\n    }\n    const recognitionInstance = new window.webkitSpeechRecognition();\n    recognitionInstance.lang = 'ru-RU';\n    recognitionInstance.continuous = false;\n    recognitionInstance.interimResults = true;\n    recognitionInstance.onresult = event => {\n      const transcript = Array.from(event.results).map(result => result[0]).map(result => result.transcript).join('');\n      setText(transcript);\n      recognition.currentTranscript = transcript;\n    };\n    recognitionInstance.onend = () => {\n      console.log('Распознавание речи завершено.');\n      handleSubmit();\n    };\n    recognitionInstance.start();\n    recognition.current = recognitionInstance;\n  };\n  const handleCreatePost = async () => {\n    try {\n      // Отправляем текст и изображение на сервер для создания поста\n      const formData = new FormData();\n      formData.append('text', text);\n      formData.append('image', imageFile);\n      await axios.post('http://localhost:5000/create_post', formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      });\n      alert(\"Post created successfully!\");\n    } catch (error) {\n      console.error('Ошибка создания поста:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Text Area\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-group\",\n      children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n        className: \"form-control\",\n        value: text,\n        onChange: handleChange,\n        placeholder: \"Enter your text here...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"fileInput\",\n        children: \"Upload Image:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        className: \"form-control-file\",\n        id: \"fileInput\",\n        onChange: handleFileChange,\n        accept: \"image/*,video/*\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn btn-primary mr-2\",\n      onClick: handleSpeechRecognition,\n      children: \"Recognize Speech\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn btn-primary\",\n      onClick: handleSubmit,\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 13\n    }, this), result && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"result\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Result:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Predicted Nudity Class: \", result.predicted_nudity_class]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Nudity Probability: \", result.nudity_probability]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Censored Text: \", result.censored_text]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Contains Profanity: \", result.contains_profanity.toString()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ugu\",\n        children: canCreatePost && /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-success\",\n          onClick: handleCreatePost,\n          children: \"Create Post\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 126,\n    columnNumber: 9\n  }, this);\n};\n_s(Textarea, \"udCsS5uh5vHWW0+AGmbk0ttwRKE=\");\n_c = Textarea;\nexport default Textarea;\nvar _c;\n$RefreshReg$(_c, \"Textarea\");","map":{"version":3,"names":["React","useState","useRef","axios","jsxDEV","_jsxDEV","Textarea","_s","text","setText","result","setResult","imageFile","setImageFile","videoFile","setVideoFile","canCreatePost","setCanCreatePost","recognition","handleSubmit","imagePath","videoPath","formData","FormData","append","fileResponse","post","headers","data","file_path","response","currentTranscript","image_path","video_path","nudity_probability","censored_text","includes","error","console","handleFileChange","event","file","target","files","type","startsWith","handleChange","value","handleSpeechRecognition","window","alert","current","abort","recognitionInstance","webkitSpeechRecognition","lang","continuous","interimResults","onresult","transcript","Array","from","results","map","join","onend","log","start","handleCreatePost","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onChange","placeholder","htmlFor","id","accept","onClick","predicted_nudity_class","contains_profanity","toString","_c","$RefreshReg$"],"sources":["C:/Users/Zhiger/Desktop/nudity-recognizer-main/frontend/src/components/Textarea.jsx"],"sourcesContent":["import React, { useState, useRef } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst Textarea = () => {\r\n    const [text, setText] = useState('');\r\n    const [result, setResult] = useState(null);\r\n    const [imageFile, setImageFile] = useState(null);\r\n    const [videoFile, setVideoFile] = useState(null);\r\n    const [canCreatePost, setCanCreatePost] = useState(false);\r\n    const recognition = useRef(null);\r\n\r\n    const handleSubmit = async () => {\r\n        try {\r\n            let imagePath = null;\r\n            let videoPath = null;\r\n\r\n            if (imageFile) {\r\n                const formData = new FormData();\r\n                formData.append('file', imageFile);\r\n\r\n                const fileResponse = await axios.post('http://localhost:5000/upload', formData, {\r\n                    headers: {\r\n                        'Content-Type': 'multipart/form-data'\r\n                    }\r\n                });\r\n                imagePath = fileResponse.data.file_path;\r\n            }\r\n\r\n            if (videoFile) {\r\n                const formData = new FormData();\r\n                formData.append('file', videoFile);\r\n\r\n                const fileResponse = await axios.post('http://localhost:5000/upload', formData, {\r\n                    headers: {\r\n                        'Content-Type': 'multipart/form-data'\r\n                    }\r\n                });\r\n                videoPath = fileResponse.data.file_path;\r\n            }\r\n\r\n            const response = await axios.post('http://localhost:5000/process_data', {\r\n                text: text || recognition.currentTranscript,\r\n                image_path: imagePath,\r\n                video_path: videoPath\r\n            });\r\n\r\n            setResult(response.data);\r\n\r\n            if (response.data.nudity_probability !== \"This content is forbidden\" && !response.data.censored_text.includes(\"***\")) {\r\n                setCanCreatePost(true);\r\n            } else {\r\n                setCanCreatePost(false);\r\n            }\r\n        } catch (error) {\r\n            console.error('Ошибка отправки данных:', error);\r\n        }\r\n    };\r\n\r\n    const handleFileChange = (event) => {\r\n        const file = event.target.files[0];\r\n        if (file.type.startsWith('image')) {\r\n            setImageFile(file);\r\n        } else if (file.type.startsWith('video')) {\r\n            setVideoFile(file);\r\n        }\r\n    };\r\n\r\n    const handleChange = (event) => {\r\n        setText(event.target.value);\r\n    };\r\n\r\n    const handleSpeechRecognition = () => {\r\n        if (!('webkitSpeechRecognition' in window)) {\r\n            alert(\"Распознавание речи не поддерживается в вашем браузере.\");\r\n            return;\r\n        }\r\n\r\n        if (recognition.current) {\r\n            recognition.current.abort();\r\n        }\r\n\r\n        const recognitionInstance = new window.webkitSpeechRecognition();\r\n        recognitionInstance.lang = 'ru-RU';\r\n        recognitionInstance.continuous = false;\r\n        recognitionInstance.interimResults = true;\r\n\r\n        recognitionInstance.onresult = (event) => {\r\n            const transcript = Array.from(event.results)\r\n                .map((result) => result[0])\r\n                .map((result) => result.transcript)\r\n                .join('');\r\n\r\n            setText(transcript);\r\n            recognition.currentTranscript = transcript;\r\n        };\r\n\r\n        recognitionInstance.onend = () => {\r\n            console.log('Распознавание речи завершено.');\r\n            handleSubmit(); \r\n        };\r\n\r\n        recognitionInstance.start();\r\n        recognition.current = recognitionInstance;\r\n    };\r\n\r\n    const handleCreatePost = async () => {\r\n        try {\r\n            // Отправляем текст и изображение на сервер для создания поста\r\n            const formData = new FormData();\r\n            formData.append('text', text);\r\n            formData.append('image', imageFile);\r\n\r\n            await axios.post('http://localhost:5000/create_post', formData, {\r\n                headers: {\r\n                    'Content-Type': 'multipart/form-data'\r\n                }\r\n            });\r\n\r\n            alert(\"Post created successfully!\");\r\n        } catch (error) {\r\n            console.error('Ошибка создания поста:', error);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <h2>Text Area</h2>\r\n            <div className=\"form-group\">\r\n                <textarea\r\n                    className=\"form-control\"\r\n                    value={text}\r\n                    onChange={handleChange}\r\n                    placeholder=\"Enter your text here...\"\r\n                />\r\n            </div>\r\n            <div className=\"form-group\">\r\n                <label htmlFor=\"fileInput\">Upload Image:</label>\r\n                <input\r\n                    type=\"file\"\r\n                    className=\"form-control-file\"\r\n                    id=\"fileInput\"\r\n                    onChange={handleFileChange}\r\n                    accept=\"image/*,video/*\"\r\n                />\r\n            </div>\r\n            <button className=\"btn btn-primary mr-2\" onClick={handleSpeechRecognition}>\r\n                Recognize Speech\r\n            </button>\r\n            <button className=\"btn btn-primary\" onClick={handleSubmit}>\r\n                Submit\r\n            </button>\r\n            {result && (\r\n                <div className=\"result\">\r\n                    <h3>Result:</h3>\r\n                    <p>Predicted Nudity Class: {result.predicted_nudity_class}</p>\r\n                    <p>Nudity Probability: {result.nudity_probability}</p>\r\n                    <p>Censored Text: {result.censored_text}</p>\r\n                    <p>Contains Profanity: {result.contains_profanity.toString()}</p>\r\n                    <div className='ugu'>\r\n                        {canCreatePost && (\r\n                            <button className=\"btn btn-success\" onClick={handleCreatePost}>\r\n                                Create Post\r\n                            </button>\r\n                        )}\r\n                    </div>\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Textarea;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}