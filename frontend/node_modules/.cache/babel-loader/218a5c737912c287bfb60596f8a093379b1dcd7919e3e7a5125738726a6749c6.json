{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Zhiger\\\\Desktop\\\\nudity-recognizer-main\\\\frontend\\\\src\\\\components\\\\Textarea.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Textarea = () => {\n  _s();\n  const [text, setText] = useState('');\n  const [imageFile, setImageFile] = useState(null);\n  const [posts, setPosts] = useState([]); // Состояние для хранения списка постов\n  const recognition = useRef(null);\n  const handleSubmit = async () => {\n    try {\n      let imagePath = null;\n      if (imageFile) {\n        const formData = new FormData();\n        formData.append('file', imageFile);\n        const fileResponse = await axios.post('http://localhost:5000/upload', formData, {\n          headers: {\n            'Content-Type': 'multipart/form-data'\n          }\n        });\n        imagePath = fileResponse.data.file_path;\n      }\n      const newPost = {\n        text,\n        image_path: imagePath\n      };\n      setPosts([...posts, newPost]); // Добавляем новый пост в список\n    } catch (error) {\n      console.error('Ошибка отправки данных:', error);\n    }\n  };\n  const handleFileChange = event => {\n    const file = event.target.files[0];\n    setImageFile(file);\n  };\n  const handleChange = event => {\n    setText(event.target.value);\n  };\n  const handleSpeechRecognition = () => {\n    if (!('webkitSpeechRecognition' in window)) {\n      alert(\"Распознавание речи не поддерживается в вашем браузере.\");\n      return;\n    }\n    if (recognition.current) {\n      recognition.current.abort();\n    }\n    const recognitionInstance = new window.webkitSpeechRecognition();\n    recognitionInstance.lang = 'ru-RU';\n    recognitionInstance.continuous = false;\n    recognitionInstance.interimResults = true;\n    recognitionInstance.onresult = event => {\n      const transcript = Array.from(event.results).map(result => result[0]).map(result => result.transcript).join('');\n      setText(transcript);\n    };\n    recognitionInstance.onend = () => {\n      console.log('Распознавание речи завершено.');\n      handleSubmit();\n    };\n    recognitionInstance.start();\n    recognition.current = recognitionInstance;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Text Area\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-group\",\n      children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n        className: \"form-control\",\n        value: text,\n        onChange: handleChange,\n        placeholder: \"Enter your text here...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"fileInput\",\n        children: \"Upload Image:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        className: \"form-control-file\",\n        id: \"fileInput\",\n        onChange: handleFileChange,\n        accept: \"image/*\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn btn-primary mr-2\",\n      onClick: handleSpeechRecognition,\n      children: \"Recognize Speech\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn btn-primary\",\n      onClick: handleSubmit,\n      children: \"Create Post\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"post-list\",\n      children: posts.map((post, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card mt-3\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-body\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"card-text\",\n            children: post.text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 29\n          }, this), post.image_path && /*#__PURE__*/_jsxDEV(\"img\", {\n            src: post.image_path,\n            alt: \"post\",\n            className: \"img-fluid\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 49\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 25\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 9\n  }, this);\n};\n_s(Textarea, \"ZARWj5KtHm36VT/3FRj95L9Ru+c=\");\n_c = Textarea;\nexport default Textarea;\nvar _c;\n$RefreshReg$(_c, \"Textarea\");","map":{"version":3,"names":["React","useState","useRef","axios","jsxDEV","_jsxDEV","Textarea","_s","text","setText","imageFile","setImageFile","posts","setPosts","recognition","handleSubmit","imagePath","formData","FormData","append","fileResponse","post","headers","data","file_path","newPost","image_path","error","console","handleFileChange","event","file","target","files","handleChange","value","handleSpeechRecognition","window","alert","current","abort","recognitionInstance","webkitSpeechRecognition","lang","continuous","interimResults","onresult","transcript","Array","from","results","map","result","join","onend","log","start","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onChange","placeholder","htmlFor","type","id","accept","onClick","index","src","alt","_c","$RefreshReg$"],"sources":["C:/Users/Zhiger/Desktop/nudity-recognizer-main/frontend/src/components/Textarea.jsx"],"sourcesContent":["import React, { useState, useRef } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst Textarea = () => {\r\n    const [text, setText] = useState('');\r\n    const [imageFile, setImageFile] = useState(null);\r\n    const [posts, setPosts] = useState([]); // Состояние для хранения списка постов\r\n    const recognition = useRef(null);\r\n\r\n    const handleSubmit = async () => {\r\n        try {\r\n            let imagePath = null;\r\n\r\n            if (imageFile) {\r\n                const formData = new FormData();\r\n                formData.append('file', imageFile);\r\n\r\n                const fileResponse = await axios.post('http://localhost:5000/upload', formData, {\r\n                    headers: {\r\n                        'Content-Type': 'multipart/form-data'\r\n                    }\r\n                });\r\n                imagePath = fileResponse.data.file_path;\r\n            }\r\n\r\n            const newPost = {\r\n                text,\r\n                image_path: imagePath\r\n            };\r\n\r\n            setPosts([...posts, newPost]); // Добавляем новый пост в список\r\n        } catch (error) {\r\n            console.error('Ошибка отправки данных:', error);\r\n        }\r\n    };\r\n\r\n    const handleFileChange = (event) => {\r\n        const file = event.target.files[0];\r\n        setImageFile(file);\r\n    };\r\n\r\n    const handleChange = (event) => {\r\n        setText(event.target.value);\r\n    };\r\n\r\n    const handleSpeechRecognition = () => {\r\n        if (!('webkitSpeechRecognition' in window)) {\r\n            alert(\"Распознавание речи не поддерживается в вашем браузере.\");\r\n            return;\r\n        }\r\n\r\n        if (recognition.current) {\r\n            recognition.current.abort();\r\n        }\r\n\r\n        const recognitionInstance = new window.webkitSpeechRecognition();\r\n        recognitionInstance.lang = 'ru-RU';\r\n        recognitionInstance.continuous = false;\r\n        recognitionInstance.interimResults = true;\r\n\r\n        recognitionInstance.onresult = (event) => {\r\n            const transcript = Array.from(event.results)\r\n                .map((result) => result[0])\r\n                .map((result) => result.transcript)\r\n                .join('');\r\n\r\n            setText(transcript);\r\n        };\r\n\r\n        recognitionInstance.onend = () => {\r\n            console.log('Распознавание речи завершено.');\r\n            handleSubmit(); \r\n        };\r\n\r\n        recognitionInstance.start();\r\n        recognition.current = recognitionInstance;\r\n    };\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <h2>Text Area</h2>\r\n            <div className=\"form-group\">\r\n                <textarea\r\n                    className=\"form-control\"\r\n                    value={text}\r\n                    onChange={handleChange}\r\n                    placeholder=\"Enter your text here...\"\r\n                />\r\n            </div>\r\n            <div className=\"form-group\">\r\n                <label htmlFor=\"fileInput\">Upload Image:</label>\r\n                <input\r\n                    type=\"file\"\r\n                    className=\"form-control-file\"\r\n                    id=\"fileInput\"\r\n                    onChange={handleFileChange}\r\n                    accept=\"image/*\"\r\n                />\r\n            </div>\r\n            <button className=\"btn btn-primary mr-2\" onClick={handleSpeechRecognition}>\r\n                Recognize Speech\r\n            </button>\r\n            <button className=\"btn btn-primary\" onClick={handleSubmit}>\r\n                Create Post\r\n            </button>\r\n            <div className=\"post-list\">\r\n                {posts.map((post, index) => (\r\n                    <div key={index} className=\"card mt-3\">\r\n                        <div className=\"card-body\">\r\n                            <p className=\"card-text\">{post.text}</p>\r\n                            {post.image_path && <img src={post.image_path} alt=\"post\" className=\"img-fluid\" />}\r\n                        </div>\r\n                    </div>\r\n                ))}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Textarea;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}