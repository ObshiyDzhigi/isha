{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Zhiger\\\\Desktop\\\\nudity-recognizer-main\\\\frontend\\\\src\\\\components\\\\Textarea.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Textarea = () => {\n  _s();\n  const [text, setText] = useState('');\n  const [result, setResult] = useState(null);\n  const [imageFile, setImageFile] = useState(null);\n  const [posts, setPosts] = useState([]);\n  const recognition = useRef(null); // Добавляем определение переменной recognition\n\n  // Состояние из локального хранилища при загрузке компонента\n  useEffect(() => {\n    const savedResult = localStorage.getItem('result');\n    if (savedResult) {\n      setResult(JSON.parse(savedResult));\n    }\n    const savedPosts = localStorage.getItem('posts');\n    if (savedPosts) {\n      setPosts(JSON.parse(savedPosts));\n    }\n  }, []);\n\n  // Сохранение данных в локальное хранилище при обновлении состояния\n  useEffect(() => {\n    if (result) {\n      localStorage.setItem('result', JSON.stringify(result));\n    }\n  }, [result]);\n  useEffect(() => {\n    if (posts) {\n      localStorage.setItem('posts', JSON.stringify(posts));\n    }\n  }, [posts]);\n  const handleSubmit = async () => {\n    try {\n      let imagePath = null;\n      if (imageFile) {\n        const formData = new FormData();\n        formData.append('file', imageFile);\n        const fileResponse = await axios.post('http://localhost:5000/upload', formData, {\n          headers: {\n            'Content-Type': 'multipart/form-data'\n          }\n        });\n        imagePath = fileResponse.data.file_path;\n      }\n      const response = await axios.post('http://localhost:5000/process_data', {\n        text: text || recognition.currentTranscript,\n        image_path: imagePath\n      });\n      setResult(response.data);\n      if (response.data.nudity_probability !== \"This content is forbidden\" && !response.data.censored_text.includes(\"***\")) {\n        setPosts([...posts, {\n          text,\n          image_path: imagePath\n        }]);\n      }\n    } catch (error) {\n      console.error('Ошибка отправки данных:', error);\n    }\n  };\n  const handleFileChange = event => {\n    const file = event.target.files[0];\n    setImageFile(file);\n  };\n  const handleChange = event => {\n    setText(event.target.value);\n  };\n  const handleSpeechRecognition = () => {\n    if (!('webkitSpeechRecognition' in window)) {\n      alert(\"Распознавание речи не поддерживается в вашем браузере.\");\n      return;\n    }\n    if (recognition.current) {\n      recognition.current.abort();\n    }\n    const recognitionInstance = new window.webkitSpeechRecognition();\n    recognitionInstance.lang = 'ru-RU';\n    recognitionInstance.continuous = false;\n    recognitionInstance.interimResults = true;\n    recognitionInstance.onresult = event => {\n      const transcript = Array.from(event.results).map(result => result[0]).map(result => result.transcript).join('');\n      setText(transcript);\n    };\n    recognitionInstance.onend = () => {\n      console.log('Распознавание речи завершено.');\n      handleSubmit();\n    };\n    recognitionInstance.start();\n    recognition.current = recognitionInstance;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Text Area\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-group\",\n      children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n        className: \"form-control\",\n        value: text,\n        onChange: handleChange,\n        placeholder: \"Enter your text here...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"fileInput\",\n        children: \"Upload Image:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        className: \"form-control-file\",\n        id: \"fileInput\",\n        onChange: handleFileChange,\n        accept: \"image/*\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn btn-primary mr-2\",\n      onClick: handleSpeechRecognition,\n      children: \"Recognize Speech\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn btn-primary\",\n      onClick: handleSubmit,\n      children: \"Create Post\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 13\n    }, this), result && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"result\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Result:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Predicted Nudity Class: \", result.predicted_nudity_class]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Nudity Probability: \", result.nudity_probability]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Censored Text: \", result.censored_text]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Contains Profanity: \", result.contains_profanity.toString()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ugu\",\n        children: result && (result.nudity_probability === \"This content is forbidden\" || result.censored_text.includes(\"***\")) && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"Your post is currently awaiting confirmation from the admins.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"post-list\",\n      children: posts.map((post, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card mt-3\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-body\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"card-text\",\n            children: post.text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 29\n          }, this), post.image_path && /*#__PURE__*/_jsxDEV(\"img\", {\n            src: post.image_path,\n            alt: \"post\",\n            className: \"img-fluid\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 49\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 25\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 111,\n    columnNumber: 9\n  }, this);\n};\n_s(Textarea, \"4NAebXhIT9hIa2N8sqyPecec6Cg=\");\n_c = Textarea;\nexport default Textarea;\nvar _c;\n$RefreshReg$(_c, \"Textarea\");","map":{"version":3,"names":["React","useState","useRef","useEffect","axios","jsxDEV","_jsxDEV","Textarea","_s","text","setText","result","setResult","imageFile","setImageFile","posts","setPosts","recognition","savedResult","localStorage","getItem","JSON","parse","savedPosts","setItem","stringify","handleSubmit","imagePath","formData","FormData","append","fileResponse","post","headers","data","file_path","response","currentTranscript","image_path","nudity_probability","censored_text","includes","error","console","handleFileChange","event","file","target","files","handleChange","value","handleSpeechRecognition","window","alert","current","abort","recognitionInstance","webkitSpeechRecognition","lang","continuous","interimResults","onresult","transcript","Array","from","results","map","join","onend","log","start","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onChange","placeholder","htmlFor","type","id","accept","onClick","predicted_nudity_class","contains_profanity","toString","index","src","alt","_c","$RefreshReg$"],"sources":["C:/Users/Zhiger/Desktop/nudity-recognizer-main/frontend/src/components/Textarea.jsx"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst Textarea = () => {\r\n    const [text, setText] = useState('');\r\n    const [result, setResult] = useState(null);\r\n    const [imageFile, setImageFile] = useState(null);\r\n    const [posts, setPosts] = useState([]);\r\n    const recognition = useRef(null); // Добавляем определение переменной recognition\r\n\r\n    // Состояние из локального хранилища при загрузке компонента\r\n    useEffect(() => {\r\n        const savedResult = localStorage.getItem('result');\r\n        if (savedResult) {\r\n            setResult(JSON.parse(savedResult));\r\n        }\r\n\r\n        const savedPosts = localStorage.getItem('posts');\r\n        if (savedPosts) {\r\n            setPosts(JSON.parse(savedPosts));\r\n        }\r\n    }, []);\r\n\r\n    // Сохранение данных в локальное хранилище при обновлении состояния\r\n    useEffect(() => {\r\n        if (result) {\r\n            localStorage.setItem('result', JSON.stringify(result));\r\n        }\r\n    }, [result]);\r\n\r\n    useEffect(() => {\r\n        if (posts) {\r\n            localStorage.setItem('posts', JSON.stringify(posts));\r\n        }\r\n    }, [posts]);\r\n\r\n    const handleSubmit = async () => {\r\n        try {\r\n            let imagePath = null;\r\n\r\n            if (imageFile) {\r\n                const formData = new FormData();\r\n                formData.append('file', imageFile);\r\n\r\n                const fileResponse = await axios.post('http://localhost:5000/upload', formData, {\r\n                    headers: {\r\n                        'Content-Type': 'multipart/form-data'\r\n                    }\r\n                });\r\n                imagePath = fileResponse.data.file_path;\r\n            }\r\n\r\n            const response = await axios.post('http://localhost:5000/process_data', {\r\n                text: text || recognition.currentTranscript,\r\n                image_path: imagePath\r\n            });\r\n\r\n            setResult(response.data);\r\n\r\n            if (response.data.nudity_probability !== \"This content is forbidden\" && !response.data.censored_text.includes(\"***\")) {\r\n                setPosts([...posts, { text, image_path: imagePath }]);\r\n            }\r\n        } catch (error) {\r\n            console.error('Ошибка отправки данных:', error);\r\n        }\r\n    };\r\n\r\n    const handleFileChange = (event) => {\r\n        const file = event.target.files[0];\r\n        setImageFile(file);\r\n    };\r\n\r\n    const handleChange = (event) => {\r\n        setText(event.target.value);\r\n    };\r\n\r\n    const handleSpeechRecognition = () => {\r\n        if (!('webkitSpeechRecognition' in window)) {\r\n            alert(\"Распознавание речи не поддерживается в вашем браузере.\");\r\n            return;\r\n        }\r\n\r\n        if (recognition.current) {\r\n            recognition.current.abort();\r\n        }\r\n\r\n        const recognitionInstance = new window.webkitSpeechRecognition();\r\n        recognitionInstance.lang = 'ru-RU';\r\n        recognitionInstance.continuous = false;\r\n        recognitionInstance.interimResults = true;\r\n\r\n        recognitionInstance.onresult = (event) => {\r\n            const transcript = Array.from(event.results)\r\n                .map((result) => result[0])\r\n                .map((result) => result.transcript)\r\n                .join('');\r\n\r\n            setText(transcript);\r\n        };\r\n\r\n        recognitionInstance.onend = () => {\r\n            console.log('Распознавание речи завершено.');\r\n            handleSubmit(); \r\n        };\r\n\r\n        recognitionInstance.start();\r\n        recognition.current = recognitionInstance;\r\n    };\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <h2>Text Area</h2>\r\n            <div className=\"form-group\">\r\n                <textarea\r\n                    className=\"form-control\"\r\n                    value={text}\r\n                    onChange={handleChange}\r\n                    placeholder=\"Enter your text here...\"\r\n                />\r\n            </div>\r\n            <div className=\"form-group\">\r\n                <label htmlFor=\"fileInput\">Upload Image:</label>\r\n                <input\r\n                    type=\"file\"\r\n                    className=\"form-control-file\"\r\n                    id=\"fileInput\"\r\n                    onChange={handleFileChange}\r\n                    accept=\"image/*\"\r\n                />\r\n            </div>\r\n            <button className=\"btn btn-primary mr-2\" onClick={handleSpeechRecognition}>\r\n                Recognize Speech\r\n            </button>\r\n            <button className=\"btn btn-primary\" onClick={handleSubmit}>\r\n                Create Post\r\n            </button>\r\n            {result && (\r\n                <div className=\"result\">\r\n                    <h3>Result:</h3>\r\n                    <p>Predicted Nudity Class: {result.predicted_nudity_class}</p>\r\n                    <p>Nudity Probability: {result.nudity_probability}</p>\r\n                    <p>Censored Text: {result.censored_text}</p>\r\n                    <p>Contains Profanity: {result.contains_profanity.toString()}</p>\r\n                    <div className='ugu'>\r\n                        {result && (result.nudity_probability === \"This content is forbidden\" || result.censored_text.includes(\"***\")) && (\r\n                            <div>\r\n                                Your post is currently awaiting confirmation from the admins.\r\n                            </div>\r\n                        )}\r\n                    </div>\r\n                </div>\r\n            )}\r\n            <div className=\"post-list\">\r\n                {posts.map((post, index) => (\r\n                    <div key={index} className=\"card mt-3\">\r\n                        <div className=\"card-body\">\r\n                            <p className=\"card-text\">{post.text}</p>\r\n                            {post.image_path && <img src={post.image_path} alt=\"post\" className=\"img-fluid\" />}\r\n                        </div>\r\n                    </div>\r\n                ))}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Textarea;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}