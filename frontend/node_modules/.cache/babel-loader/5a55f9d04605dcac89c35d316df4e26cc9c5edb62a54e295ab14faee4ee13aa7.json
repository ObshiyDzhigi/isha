{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Zhiger\\\\Desktop\\\\nudity-recognizer-main\\\\frontend\\\\src\\\\components\\\\Textarea.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Textarea = () => {\n  _s();\n  const [text, setText] = useState('');\n  const [result, setResult] = useState(null);\n  const [imageFile, setImageFile] = useState(null);\n  const [videoFile, setVideoFile] = useState(null);\n  const recognition = useRef(null);\n  const handleSubmit = async () => {\n    try {\n      let imagePath = null;\n      let videoPath = null;\n      if (imageFile) {\n        const formData = new FormData();\n        formData.append('file', imageFile);\n        const fileResponse = await axios.post('http://localhost:5000/upload', formData, {\n          headers: {\n            'Content-Type': 'multipart/form-data'\n          }\n        });\n        imagePath = fileResponse.data.file_path;\n      }\n      if (videoFile) {\n        const formData = new FormData();\n        formData.append('file', videoFile);\n        const fileResponse = await axios.post('http://localhost:5000/upload', formData, {\n          headers: {\n            'Content-Type': 'multipart/form-data'\n          }\n        });\n        videoPath = fileResponse.data.file_path;\n      }\n      const response = await axios.post('http://localhost:5000/process_data', {\n        text: text || recognition.currentTranscript,\n        image_path: imagePath,\n        video_path: videoPath\n      });\n      console.log(response.data);\n      setResult(response.data);\n    } catch (error) {\n      console.error('Ошибка отправки данных:', error);\n    }\n  };\n  const handleFileChange = event => {\n    const file = event.target.files[0];\n    if (file.type.startsWith('image')) {\n      setImageFile(file);\n    } else if (file.type.startsWith('video')) {\n      setVideoFile(file);\n    }\n  };\n  const handleChange = event => {\n    setText(event.target.value);\n  };\n  const handleSpeechRecognition = () => {\n    if (!('webkitSpeechRecognition' in window)) {\n      alert(\"Распознавание речи не поддерживается в вашем браузере.\");\n      return;\n    }\n    if (recognition.current) {\n      recognition.current.abort();\n    }\n    const recognitionInstance = new window.webkitSpeechRecognition();\n    recognitionInstance.lang = 'ru-RU';\n    recognitionInstance.continuous = false;\n    recognitionInstance.interimResults = true;\n    recognitionInstance.onresult = event => {\n      const transcript = Array.from(event.results).map(result => result[0]).map(result => result.transcript).join('');\n      setText(transcript);\n      recognition.currentTranscript = transcript;\n    };\n    recognitionInstance.onend = () => {\n      console.log('Распознавание речи завершено.');\n      handleSubmit(); // Автоматически отправляем текст после окончания распознавания речи\n    };\n    recognitionInstance.start();\n    recognition.current = recognitionInstance;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Text Area\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-group\",\n      children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n        className: \"form-control\",\n        value: text,\n        onChange: handleChange,\n        placeholder: \"Enter your text here...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"fileInput\",\n        children: \"Upload Image:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        className: \"form-control-file\",\n        id: \"fileInput\",\n        onChange: handleFileChange,\n        accept: \"image/*,video/*\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn btn-primary mr-2\",\n      onClick: handleSpeechRecognition,\n      children: \"Recognize Speech\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn btn-primary\",\n      onClick: handleSubmit,\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 13\n    }, this), result && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"result\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Result:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Predicted Nudity Class: \", result.predicted_nudity_class]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Nudity Probability: \", result.nudity_probability]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Censored Text: \", result.censored_text]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Contains Profanity: \", result.contains_profanity.toString()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ugu\",\n        children: \"Wait for your post to be published by admins!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 101,\n    columnNumber: 9\n  }, this);\n};\n_s(Textarea, \"MiEJYWW3Hmu6q/VLk+zTWin+D2w=\");\n_c = Textarea;\nexport default Textarea;\nvar _c;\n$RefreshReg$(_c, \"Textarea\");","map":{"version":3,"names":["React","useState","useRef","axios","jsxDEV","_jsxDEV","Textarea","_s","text","setText","result","setResult","imageFile","setImageFile","videoFile","setVideoFile","recognition","handleSubmit","imagePath","videoPath","formData","FormData","append","fileResponse","post","headers","data","file_path","response","currentTranscript","image_path","video_path","console","log","error","handleFileChange","event","file","target","files","type","startsWith","handleChange","value","handleSpeechRecognition","window","alert","current","abort","recognitionInstance","webkitSpeechRecognition","lang","continuous","interimResults","onresult","transcript","Array","from","results","map","join","onend","start","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onChange","placeholder","htmlFor","id","accept","onClick","predicted_nudity_class","nudity_probability","censored_text","contains_profanity","toString","_c","$RefreshReg$"],"sources":["C:/Users/Zhiger/Desktop/nudity-recognizer-main/frontend/src/components/Textarea.jsx"],"sourcesContent":["import React, { useState, useRef } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst Textarea = () => {\r\n    const [text, setText] = useState('');\r\n    const [result, setResult] = useState(null);\r\n    const [imageFile, setImageFile] = useState(null);\r\n    const [videoFile, setVideoFile] = useState(null);\r\n    const recognition = useRef(null);\r\n\r\n    const handleSubmit = async () => {\r\n        try {\r\n            let imagePath = null;\r\n            let videoPath = null;\r\n\r\n            if (imageFile) {\r\n                const formData = new FormData();\r\n                formData.append('file', imageFile);\r\n\r\n                const fileResponse = await axios.post('http://localhost:5000/upload', formData, {\r\n                    headers: {\r\n                        'Content-Type': 'multipart/form-data'\r\n                    }\r\n                });\r\n                imagePath = fileResponse.data.file_path;\r\n            }\r\n\r\n            if (videoFile) {\r\n                const formData = new FormData();\r\n                formData.append('file', videoFile);\r\n\r\n                const fileResponse = await axios.post('http://localhost:5000/upload', formData, {\r\n                    headers: {\r\n                        'Content-Type': 'multipart/form-data'\r\n                    }\r\n                });\r\n                videoPath = fileResponse.data.file_path;\r\n            }\r\n\r\n            const response = await axios.post('http://localhost:5000/process_data', {\r\n                text: text || recognition.currentTranscript,\r\n                image_path: imagePath,\r\n                video_path: videoPath\r\n            });\r\n\r\n            console.log(response.data);\r\n            setResult(response.data);\r\n        } catch (error) {\r\n            console.error('Ошибка отправки данных:', error);\r\n        }\r\n    };\r\n\r\n    const handleFileChange = (event) => {\r\n        const file = event.target.files[0];\r\n        if (file.type.startsWith('image')) {\r\n            setImageFile(file);\r\n        } else if (file.type.startsWith('video')) {\r\n            setVideoFile(file);\r\n        }\r\n    };\r\n\r\n    const handleChange = (event) => {\r\n        setText(event.target.value);\r\n    };\r\n\r\n    const handleSpeechRecognition = () => {\r\n        if (!('webkitSpeechRecognition' in window)) {\r\n            alert(\"Распознавание речи не поддерживается в вашем браузере.\");\r\n            return;\r\n        }\r\n\r\n        if (recognition.current) {\r\n            recognition.current.abort();\r\n        }\r\n\r\n        const recognitionInstance = new window.webkitSpeechRecognition();\r\n        recognitionInstance.lang = 'ru-RU';\r\n        recognitionInstance.continuous = false;\r\n        recognitionInstance.interimResults = true;\r\n\r\n        recognitionInstance.onresult = (event) => {\r\n            const transcript = Array.from(event.results)\r\n                .map((result) => result[0])\r\n                .map((result) => result.transcript)\r\n                .join('');\r\n\r\n            setText(transcript);\r\n            recognition.currentTranscript = transcript;\r\n        };\r\n\r\n        recognitionInstance.onend = () => {\r\n            console.log('Распознавание речи завершено.');\r\n            handleSubmit(); // Автоматически отправляем текст после окончания распознавания речи\r\n        };\r\n\r\n        recognitionInstance.start();\r\n        recognition.current = recognitionInstance;\r\n    };\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <h2>Text Area</h2>\r\n            <div className=\"form-group\">\r\n                <textarea\r\n                    className=\"form-control\"\r\n                    value={text}\r\n                    onChange={handleChange}\r\n                    placeholder=\"Enter your text here...\"\r\n                />\r\n            </div>\r\n            <div className=\"form-group\">\r\n                <label htmlFor=\"fileInput\">Upload Image:</label>\r\n                <input\r\n                    type=\"file\"\r\n                    className=\"form-control-file\"\r\n                    id=\"fileInput\"\r\n                    onChange={handleFileChange}\r\n                    accept=\"image/*,video/*\"\r\n                />\r\n            </div>\r\n            <button className=\"btn btn-primary mr-2\" onClick={handleSpeechRecognition}>\r\n                Recognize Speech\r\n            </button>\r\n            <button className=\"btn btn-primary\" onClick={handleSubmit}>\r\n                Submit\r\n            </button>\r\n            {result && (\r\n                <div className=\"result\">\r\n                    <h3>Result:</h3>\r\n                    <p>Predicted Nudity Class: {result.predicted_nudity_class}</p>\r\n                    <p>Nudity Probability: {result.nudity_probability}</p>\r\n                    <p>Censored Text: {result.censored_text}</p>\r\n                    <p>Contains Profanity: {result.contains_profanity.toString()}</p>\r\n                    <div className='ugu'>\r\n                        Wait for your post to be published by admins!\r\n                        </div>\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Textarea;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}